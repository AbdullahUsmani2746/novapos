generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model MBSCD {
  bscd       String @id @unique @db.VarChar(2)
  bscdDetail String @db.VarChar(100)
  bscdItems  BSCD[]
}

model BSCD {
  bscd       String  @unique @db.VarChar(2)
  mbscd      String  @db.VarChar(2)
  bscdDetail String  @db.VarChar(100)
  mainBscd   MBSCD   @relation(fields: [mbscd], references: [bscd])
  macnoItems MACNO[]

  @@id([mbscd, bscd])
}

model MACNO {
  macno    String @unique @db.VarChar(3)
  bscd     String @db.VarChar(2)
  macname  String @db.VarChar(100)
  bscdRef  BSCD   @relation(fields: [bscd], references: [bscd])
  accounts ACNO[]

  @@id([bscd, macno])
}

model ACNO {
  acno             String   @unique @db.VarChar(4)
  macno            String   @db.VarChar(3)
  acname           String   @db.VarChar(100)
  bankAccountNo    String?  @map("bank_account_no") @db.VarChar(25)
  address          String?  @db.VarChar(150)
  city             String?  @db.VarChar(50)
  phoneFax         String?  @map("phone_fax") @db.VarChar(50)
  email            String?  @db.VarChar(25)
  website          String?  @db.VarChar(25)
  crDays           Int?     @map("cr_days")
  stRate           Decimal? @map("st_rate") @db.Decimal(15, 2)
  area             String?  @db.VarChar(50)
  category         String?  @map("catagory") @db.VarChar(50)
  subCategory      String?  @map("sub_catagory") @db.VarChar(25)
  country          String?  @db.VarChar(25)
  customerBank     String?  @map("customer_bank") @db.VarChar(50)
  customerBankAddr String?  @map("customer_bank_addr") @db.VarChar(100)
  stRegNo          String?  @map("st_reg_no") @db.VarChar(25)
  ntnNo            String?  @map("ntn_no") @db.VarChar(25)
  contactPerson    String?  @map("contact_person") @db.VarChar(25)
  crLimit          Int?     @map("cr_limit")
  salesArea        String?  @map("sales_ares") @db.VarChar(25)
  mainAccount      MACNO    @relation(fields: [macno], references: [macno])

  @@id([macno, acno])
  @@map("acno")
}

model Company {
  id      Int     @id @default(autoincrement())
  company String? @db.VarChar(100)
  addr1   String? @db.VarChar(100)
  addr2   String? @db.VarChar(100)
  city    String? @db.VarChar(50)
  phone   String? @db.VarChar(50)
  fax     String? @db.VarChar(50)
  email   String? @db.VarChar(50)

  costCenters CostCenter[]
  departments Department[]
  godowns     Godown[]
}

model CostCenter {
  id         Int     @id @default(autoincrement())
  ccno       Int     @unique
  company_id Int // Now references Company.id (Int)
  ccname     String? @db.VarChar(50)

  company Company @relation(fields: [company_id], references: [id])
}

model Department {
  id         Int     @id @default(autoincrement())
  dept_code  String  @db.VarChar(100)
  dept_name  String? @db.VarChar(100)
  company_id Int
  company    Company @relation(fields: [company_id], references: [id])
}

model Godown {
  id         Int     @id @default(autoincrement())
  godown     String  @db.VarChar(100)
  company_id Int
  company    Company @relation(fields: [company_id], references: [id])
}

model FinancialYear {
  id        Int      @id @default(autoincrement())
  date_from DateTime
  date_to   DateTime
  status    String   @db.Char(50)
}

model Season {
  id        Int      @id @default(autoincrement())
  date_from DateTime
  date_to   DateTime
  status    String   @db.Char(50)
}

model PoPrdCat {
  id            Int    @id @default(autoincrement())
  category_name String @db.Char(50)
}

model DeliveryMode {
  id            Int    @id @default(autoincrement())
  delivery_mode String @db.Char(50)
  rate_kg       Int
}
