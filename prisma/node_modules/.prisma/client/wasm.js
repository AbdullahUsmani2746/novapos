
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.6.0
 * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
 */
Prisma.prismaVersion = {
  client: "6.6.0",
  engine: "f676762280b54cd07c770017ed3711ddde35f37a"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.MBSCDScalarFieldEnum = {
  bscd: 'bscd',
  bscdDetail: 'bscdDetail'
};

exports.Prisma.BSCDScalarFieldEnum = {
  bscd: 'bscd',
  mbscd: 'mbscd',
  bscdDetail: 'bscdDetail'
};

exports.Prisma.MACNOScalarFieldEnum = {
  macno: 'macno',
  bscd: 'bscd',
  macname: 'macname'
};

exports.Prisma.ACNOScalarFieldEnum = {
  acno: 'acno',
  macno: 'macno',
  acname: 'acname',
  bankAccountNo: 'bankAccountNo',
  address: 'address',
  city: 'city',
  phoneFax: 'phoneFax',
  email: 'email',
  website: 'website',
  crDays: 'crDays',
  stRate: 'stRate',
  area: 'area',
  category: 'category',
  subCategory: 'subCategory',
  country: 'country',
  customerBank: 'customerBank',
  customerBankAddr: 'customerBankAddr',
  stRegNo: 'stRegNo',
  ntnNo: 'ntnNo',
  contactPerson: 'contactPerson',
  crLimit: 'crLimit',
  salesArea: 'salesArea'
};

exports.Prisma.CompanyScalarFieldEnum = {
  id: 'id',
  company: 'company',
  addr1: 'addr1',
  addr2: 'addr2',
  city: 'city',
  phone: 'phone',
  fax: 'fax',
  email: 'email'
};

exports.Prisma.CostCenterScalarFieldEnum = {
  ccno: 'ccno',
  company_id: 'company_id',
  ccname: 'ccname'
};

exports.Prisma.DepartmentScalarFieldEnum = {
  id: 'id',
  dept_name: 'dept_name',
  company_id: 'company_id'
};

exports.Prisma.ProductMasterCategoryScalarFieldEnum = {
  id: 'id',
  pmc_name: 'pmc_name'
};

exports.Prisma.ProductGroupScalarFieldEnum = {
  id: 'id',
  pg_name: 'pg_name',
  pmc_id: 'pmc_id'
};

exports.Prisma.ProductCategoryScalarFieldEnum = {
  id: 'id',
  pc_name: 'pc_name',
  pg_id: 'pg_id'
};

exports.Prisma.MainCategoryScalarFieldEnum = {
  id: 'id',
  mc_name: 'mc_name',
  pc_id: 'pc_id'
};

exports.Prisma.ItemCategoryScalarFieldEnum = {
  id: 'id',
  ic_name: 'ic_name',
  mc_id: 'mc_id',
  wc_category_id: 'wc_category_id',
  sync_status: 'sync_status',
  last_sync: 'last_sync'
};

exports.Prisma.ItemScalarFieldEnum = {
  itcd: 'itcd',
  item: 'item',
  ic_id: 'ic_id',
  sku: 'sku',
  price: 'price',
  stock: 'stock',
  wc_product_id: 'wc_product_id',
  wc_parent_id: 'wc_parent_id',
  sync_status: 'sync_status',
  last_sync: 'last_sync'
};

exports.Prisma.DesignationScalarFieldEnum = {
  id: 'id',
  desg_name: 'desg_name',
  company_id: 'company_id'
};

exports.Prisma.GodownScalarFieldEnum = {
  id: 'id',
  godown: 'godown',
  company_id: 'company_id'
};

exports.Prisma.FinancialYearScalarFieldEnum = {
  id: 'id',
  date_from: 'date_from',
  date_to: 'date_to',
  status: 'status',
  company_id: 'company_id'
};

exports.Prisma.SeasonScalarFieldEnum = {
  id: 'id',
  date_from: 'date_from',
  date_to: 'date_to',
  status: 'status',
  company_id: 'company_id'
};

exports.Prisma.PoPrdCatScalarFieldEnum = {
  id: 'id',
  category_name: 'category_name',
  company_id: 'company_id'
};

exports.Prisma.DeliveryModeScalarFieldEnum = {
  id: 'id',
  delivery_mode: 'delivery_mode',
  rate_kg: 'rate_kg',
  company_id: 'company_id'
};

exports.Prisma.UsersScalarFieldEnum = {
  user_id: 'user_id',
  user_name: 'user_name',
  company_id: 'company_id'
};

exports.Prisma.CurrencyScalarFieldEnum = {
  id: 'id',
  currency: 'currency'
};

exports.Prisma.TransactionsMasterScalarFieldEnum = {
  tran_id: 'tran_id',
  company_id: 'company_id',
  dateD: 'dateD',
  time: 'time',
  tran_code: 'tran_code',
  vr_no: 'vr_no',
  pycd: 'pycd',
  check_no: 'check_no',
  check_date: 'check_date',
  rmk: 'rmk',
  rmk1: 'rmk1',
  rmk2: 'rmk2',
  rmk3: 'rmk3',
  rmk4: 'rmk4',
  rmk5: 'rmk5',
  userId: 'userId',
  invoice_no: 'invoice_no',
  godown: 'godown',
  wc_order_id: 'wc_order_id',
  sync_status: 'sync_status',
  last_sync: 'last_sync'
};

exports.Prisma.TransactionsScalarFieldEnum = {
  id: 'id',
  tran_id: 'tran_id',
  acno: 'acno',
  itcd: 'itcd',
  ccno: 'ccno',
  narration1: 'narration1',
  narration2: 'narration2',
  narration3: 'narration3',
  narration4: 'narration4',
  narration5: 'narration5',
  chno: 'chno',
  check_date: 'check_date',
  party_name: 'party_name',
  damt: 'damt',
  camt: 'camt',
  qty: 'qty',
  rate: 'rate',
  wht_rate: 'wht_rate',
  st_rate: 'st_rate',
  godown: 'godown',
  invoice_no: 'invoice_no',
  sub_tran_id: 'sub_tran_id',
  currency: 'currency',
  gross_amount: 'gross_amount',
  fc_amount: 'fc_amount',
  no_of_pack: 'no_of_pack',
  qty_per_pack: 'qty_per_pack',
  st_amount: 'st_amount',
  additional_tax: 'additional_tax'
};

exports.Prisma.DeliveryTermScalarFieldEnum = {
  id: 'id',
  delivery_term: 'delivery_term',
  company_id: 'company_id'
};

exports.Prisma.CommissionTermScalarFieldEnum = {
  id: 'id',
  commission_term: 'commission_term',
  company_id: 'company_id'
};

exports.Prisma.EmployeeScalarFieldEnum = {
  id: 'id',
  first_name: 'first_name',
  middle_name: 'middle_name',
  surname: 'surname',
  dob: 'dob',
  gender: 'gender',
  phone_number: 'phone_number',
  npf_number: 'npf_number',
  email_address: 'email_address',
  village: 'village',
  status: 'status',
  hire_date: 'hire_date',
  job_title: 'job_title',
  department: 'department',
  work_location: 'work_location',
  manager_id: 'manager_id',
  client_id: 'client_id',
  employee_id: 'employee_id',
  payment_method: 'payment_method',
  bank_name: 'bank_name',
  account_name: 'account_name',
  account_number: 'account_number',
  pay_type: 'pay_type',
  rate_per_hour: 'rate_per_hour',
  pay_frequency: 'pay_frequency',
  employee_type: 'employee_type',
  cost_center: 'cost_center',
  allownces: 'allownces',
  allownce_eligible: 'allownce_eligible',
  deductions: 'deductions',
  profile_image: 'profile_image',
  created_on: 'created_on',
  updated_on: 'updated_on',
  company_id: 'company_id'
};

exports.Prisma.LeaveScalarFieldEnum = {
  id: 'id',
  leave_id: 'leave_id',
  available: 'available',
  employee_id: 'employee_id'
};

exports.Prisma.DocumentScalarFieldEnum = {
  id: 'id',
  url: 'url',
  name: 'name',
  description: 'description',
  employee_id: 'employee_id'
};

exports.Prisma.ManagerScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.EmployerScalarFieldEnum = {
  employer_id: 'employer_id'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.Gender = exports.$Enums.Gender = {
  MALE: 'MALE',
  FEMALE: 'FEMALE',
  OTHER: 'OTHER'
};

exports.Status = exports.$Enums.Status = {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE'
};

exports.PaymentMethod = exports.$Enums.PaymentMethod = {
  CASH: 'CASH',
  DIRECT_DEPOSIT: 'DIRECT_DEPOSIT',
  CHEQUE: 'CHEQUE'
};

exports.PayType = exports.$Enums.PayType = {
  HOUR: 'HOUR',
  SALARY: 'SALARY'
};

exports.PayFrequency = exports.$Enums.PayFrequency = {
  Monthly: 'Monthly',
  Fortnightly: 'Fortnightly',
  Weekly: 'Weekly'
};

exports.Prisma.ModelName = {
  MBSCD: 'MBSCD',
  BSCD: 'BSCD',
  MACNO: 'MACNO',
  ACNO: 'ACNO',
  Company: 'Company',
  CostCenter: 'CostCenter',
  Department: 'Department',
  ProductMasterCategory: 'ProductMasterCategory',
  ProductGroup: 'ProductGroup',
  ProductCategory: 'ProductCategory',
  MainCategory: 'MainCategory',
  ItemCategory: 'ItemCategory',
  Item: 'Item',
  Designation: 'Designation',
  Godown: 'Godown',
  FinancialYear: 'FinancialYear',
  Season: 'Season',
  PoPrdCat: 'PoPrdCat',
  DeliveryMode: 'DeliveryMode',
  Users: 'Users',
  Currency: 'Currency',
  TransactionsMaster: 'TransactionsMaster',
  Transactions: 'Transactions',
  DeliveryTerm: 'DeliveryTerm',
  CommissionTerm: 'CommissionTerm',
  Employee: 'Employee',
  Leave: 'Leave',
  Document: 'Document',
  Manager: 'Manager',
  Employer: 'Employer'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
